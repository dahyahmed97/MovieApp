// Mocks generated by Mockito 5.4.4 from annotations
// in fh_movie_app/test/cubits/repository_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:fh_movie_app/core/error/failures.dart' as _i5;
import 'package:fh_movie_app/core/models/movie_listing_response.dart' as _i6;
import 'package:fh_movie_app/core/models/MovieDetailsResponse.dart' as _i7;
import 'package:fh_movie_app/features/repo/repo.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIRepository extends _i1.Mock implements _i3.IRepository {
  MockIRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i6.MovieListingResponse>> fetchPopularMovies(
          int? currentPage) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPopularMovies,
          [currentPage],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>>.value(
                _FakeEither_0<_i5.Failure, _i6.MovieListingResponse>(
          this,
          Invocation.method(
            #fetchPopularMovies,
            [currentPage],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i6.MovieListingResponse>> fetchNowPlayingMovies(
          int? currentPage) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchNowPlayingMovies,
          [currentPage],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>>.value(
                _FakeEither_0<_i5.Failure, _i6.MovieListingResponse>(
          this,
          Invocation.method(
            #fetchNowPlayingMovies,
            [currentPage],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i6.MovieListingResponse>> fetchNowTopRatedMovies(
          int? currentPage) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchNowTopRatedMovies,
          [currentPage],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>>.value(
                _FakeEither_0<_i5.Failure, _i6.MovieListingResponse>(
          this,
          Invocation.method(
            #fetchNowTopRatedMovies,
            [currentPage],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>> searchForMovies(
    int? currentPage,
    String? query,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchForMovies,
          [
            currentPage,
            query,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>>.value(
                _FakeEither_0<_i5.Failure, _i6.MovieListingResponse>(
          this,
          Invocation.method(
            #searchForMovies,
            [
              currentPage,
              query,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MovieListingResponse>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.MovieDetailsResponse>> getMovieDetails(
          int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetails,
          [movieId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.MovieDetailsResponse>>.value(
                _FakeEither_0<_i5.Failure, _i7.MovieDetailsResponse>(
          this,
          Invocation.method(
            #getMovieDetails,
            [movieId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.MovieDetailsResponse>>);
}
