// Mocks generated by Mockito 5.4.4 from annotations
// in fh_movie_app/test/repository/data_source_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:fh_movie_app/core/models/movie_listing_response.dart' as _i2;
import 'package:fh_movie_app/core/models/MovieDetailsResponse.dart' as _i3;
import 'package:fh_movie_app/features/dataSource/data_source.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieListingResponse_0 extends _i1.SmartFake
    implements _i2.MovieListingResponse {
  _FakeMovieListingResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailsResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailsResponse {
  _FakeMovieDetailsResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIDataSource extends _i1.Mock implements _i4.IDataSource {
  MockIDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.MovieListingResponse> fetchPopularMovies(int? currentPage) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPopularMovies,
          [currentPage],
        ),
        returnValue: _i5.Future<_i2.MovieListingResponse>.value(
            _FakeMovieListingResponse_0(
          this,
          Invocation.method(
            #fetchPopularMovies,
            [currentPage],
          ),
        )),
      ) as _i5.Future<_i2.MovieListingResponse>);

  @override
  _i5.Future<_i2.MovieListingResponse> fetchNowPlayingMovies(
          int? currentPage) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchNowPlayingMovies,
          [currentPage],
        ),
        returnValue: _i5.Future<_i2.MovieListingResponse>.value(
            _FakeMovieListingResponse_0(
          this,
          Invocation.method(
            #fetchNowPlayingMovies,
            [currentPage],
          ),
        )),
      ) as _i5.Future<_i2.MovieListingResponse>);

  @override
  _i5.Future<_i2.MovieListingResponse> fetchNowTopRatedMovies(
          int? currentPage) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchNowTopRatedMovies,
          [currentPage],
        ),
        returnValue: _i5.Future<_i2.MovieListingResponse>.value(
            _FakeMovieListingResponse_0(
          this,
          Invocation.method(
            #fetchNowTopRatedMovies,
            [currentPage],
          ),
        )),
      ) as _i5.Future<_i2.MovieListingResponse>);

  @override
  _i5.Future<_i2.MovieListingResponse> searchForMovies(
    int? currentPage,
    String? query,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchForMovies,
          [
            currentPage,
            query,
          ],
        ),
        returnValue: _i5.Future<_i2.MovieListingResponse>.value(
            _FakeMovieListingResponse_0(
          this,
          Invocation.method(
            #searchForMovies,
            [
              currentPage,
              query,
            ],
          ),
        )),
      ) as _i5.Future<_i2.MovieListingResponse>);

  @override
  _i5.Future<_i3.MovieDetailsResponse> getMovieDetails(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetails,
          [movieId],
        ),
        returnValue: _i5.Future<_i3.MovieDetailsResponse>.value(
            _FakeMovieDetailsResponse_1(
          this,
          Invocation.method(
            #getMovieDetails,
            [movieId],
          ),
        )),
      ) as _i5.Future<_i3.MovieDetailsResponse>);
}
